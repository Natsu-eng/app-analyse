  name: CI/CD Pipeline

  on:
    push:
      branches: [ main, develop ]
    pull_request:
      branches: [ main ]

  env:
    PYTHON_VERSION: '3.11'

  jobs:
    test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'  # Cache des dépendances pip
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]  # Installer dépendances via pyproject.toml
          pip install pytest pytest-cov black flake8 mypy
      
      - name: Lint and Format Check
        run: |
          flake8 src/ tests/ pages/
          black --check --diff src/ tests/ pages/
      
      - name: Type Check
        run: |
          mypy src/ tests/ pages/ --ignore-missing-imports

      - name: Run tests
        run: |
          pytest --cov=src --cov-report=xml --cov-report=term-missing

    build-and-push:
      needs: test
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      
      steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/app-analyse:latest
            ${{ secrets.DOCKER_USERNAME }}/app-analyse:${{ github.sha }}